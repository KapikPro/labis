//Для той из двух матриц, в которой на главной диагонали нет элементов,
//кратных заданному числу, найти число столбцов с отрицательным произведением элементов.
#include<iostream>
#include<vector>
using namespace std;
void i(vector <vector<int>>& m)
{
for (int i = 0; i < m.size(); i++)
	for (int l = 0; l < m.size(); l++)
	{
		cin >> m[i][l];
	}
}
int c(vector <vector<int>>& m, int k)
{
	int d = 1;
	for (int i = 0; i < m.size(); i++)
	{
		if (m[i][i] % k == 0)
			d = 0;
	}
	return d;
}
void v(vector<vector<int>> &m)
{
	int k = 1, s=0;
	for (int l = 0; l < m.size(); l++)
	{
		k = 1;
		for (int i = 0; i < m.size(); i++)
		{
			k *= m[i][l];
		}
		if (k < 0)
			s++;
	}
	cout << "количество столбцов с отрицательным произведением элементов равно "<<s<<"\n";
}
int main()
{
	setlocale(LC_ALL, "Russian");
	int n;
	cout << "введите размер первой матрицы"<<endl;
	cin >> n;
	vector<vector<int>> m1(n,vector<int>(n));
	cout << "введите первую матрицу" << endl;
	i(m1);
	int k;
	cout << "введите заданное число" << endl;
	cin >> k;
	if (c(m1,k) == 1)
		v(m1);
	else
	{
		cout << "первая не подхоит" << endl;
		cout << "введите размер второй матрицы" << endl;
		cin >> n;
		vector<vector<int>> m2(n, vector<int>(n));
		cout << "введите вторую матрицу" << endl;
		i(m2);
		if (c(m2, k) == 0)
		{
			cout << "обе матрицы не подходят" << endl;
			return 0;
		}
		else
		v(m2);
	}
}