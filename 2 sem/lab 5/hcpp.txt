#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<iomanip>
#include<stdio.h>
#include<sstream>
#include<cstdio>
#include<cmath>
using namespace std;
void vv(double** x, int n, FILE* f)
{

	for (int k = 0; k < n; k++)
		for (int i = 0; i < 2; i++)
			fscanf(f, "%lf", (x[i] + k));


}
void output(double** x, int n, FILE* f,int o,double r)
{
	if (o == 1)
	{
		fprintf(f, "=======================================\n");
		fprintf(f, "вывод изменённого массива:\n");
	}
	else
	{
		fprintf(f,"n=%d r=%lf\n",n,r);
		fprintf(f, "вывод исходного массива:\n");
	}
	fprintf(f,"абсыссы\tординаты\n");
	for (int k = 0; k < n; k++)
	{
		for (int i = 0; i < 2; i++)
			fprintf(f, "%7.2lf  ", *(x[i] + k));
		fprintf(f, "\n");
	}
}


int check(double** x, double r, int n)
{
	int o = 0;
	for (int k = 0; k < n - 1; k++)
		for (int i = k + 1; i < n; i++)
			if (pow(pow(((x[1][k]) - x[1][i]), 2) + pow((x[0][k] - x[0][i]), 2), 0.5) < r)
				o = 1;
	return o;
}
void izm(double** x, double r, int n)
{
	for (int k = 0; k < n; k++)
		if (*(x[0] + k) < 0)
		{
			*(x[0] + k) = 0;
			*(x[1] + k) *= r;
		}
}
void viv(double** x, int n, int o,double r)
{
	if (o == 0)
	{
		cout << "вывод исходного массива\n";
		cout << "n="<<n<<", r="<<r<<"\n";
		cout << "абсыссы\tординаты\n";
		for (int i = 0; i < n; i++)
		{
			cout << fixed << setprecision(2) << x[0][i];
			cout << "\t";
			cout << fixed << setprecision(2) << x[1][i];
			cout << "\n";
		}
	}
	else
	{
		cout << "вывод изменённого массива\n";
		cout << "абсыссы\tординаты\n";
		for (int i = 0; i < n; i++)
		{
			cout << fixed << setprecision(2) << x[0][i];
			cout << "\t";
			cout << fixed << setprecision(2) << x[1][i];
			cout << "\n";
		}
	}
}